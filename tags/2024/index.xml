<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>2024 - Tag - TheSaucese&#39;s Blog</title>
        <link>https://thesaucese.github.io/tags/2024/</link>
        <description>2024 - Tag - TheSaucese&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>soufianessahli@proton.me (TheSaucese)</managingEditor>
            <webMaster>soufianessahli@proton.me (TheSaucese)</webMaster><lastBuildDate>Mon, 23 Dec 2024 05:52:27 &#43;0600</lastBuildDate><atom:link href="https://thesaucese.github.io/tags/2024/" rel="self" type="application/rss+xml" /><item>
    <title>Cyber Odyssey 2024 Finals - Full Writeup</title>
    <link>https://thesaucese.github.io/cyberodysseyfinals/</link>
    <pubDate>Mon, 23 Dec 2024 05:52:27 &#43;0600</pubDate>
    <author>theSaucese</author>
    <guid>https://thesaucese.github.io/cyberodysseyfinals/</guid>
    <description><![CDATA[Intro Dolphin supremacy 🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬🐬
BashCage - Misc Description I heard you can execute bash commands using only special characters. Show me what you got!
Explanation Inspired by https://medium.com/@philomath213/securinets-ctf-quals-2019-special-revenge-6c923d5b900b and https://gist.github.com/dimasma0305/c3d5d3cac71c8240a491a3010f2372b8
I pretty much had to write &ldquo;sh&rdquo; (which would open a shell) knowing that :
&#34;0&#34;: &#34;${#}&#34;, &#34;1&#34;: &#34;${##}&#34;, &#34;2&#34;: &#34;$((${##}&lt;&lt;$((${##}))))&#34;, &#34;3&#34;: &#34;$((${##}&lt;&lt;$((${##}))^${##}))&#34;, &#34;4&#34;: &#34;$((${##}&lt;&lt;$((${##}))&lt;&lt;$((${##}))))&#34;, &#34;5&#34;: &#34;$((${##}&lt;&lt;$((${##}))&lt;&lt;$((${##}))^${##}))&#34;, &#34;6&#34;: &#34;$(($((${##}&lt;&lt;$((${##}))^${##}))&lt;&lt;${##}))&#34;, &#34;7&#34;: &#34;$(($((${##}&lt;&lt;$((${##}))^${##}))&lt;&lt;${##}^${##}))&#34;, &#34;8&#34;: &#34;$((${##}&lt;&lt;$((${##}))&lt;&lt;$((${##}))&lt;&lt;$((${##}))))&#34;, &#34;9&#34;: &#34;$((${##}&lt;&lt;$((${##}))&lt;&lt;$((${##}))&lt;&lt;$((${##}))^${##}))&#34;, We can call a shell by doing : $'\163'$'\150']]></description>
</item>
<item>
    <title>1337UP 2024 - Full Writeup</title>
    <link>https://thesaucese.github.io/1337up-2024-full-writeup/</link>
    <pubDate>Mon, 18 Nov 2024 13:03:00 &#43;0100</pubDate>
    <author>theSaucese</author>
    <guid>https://thesaucese.github.io/1337up-2024-full-writeup/</guid>
    <description><![CDATA[<h2 id="intro">Intro</h2>
<p>Amazing CTF, beginner friendly and is barely guessy, I wish I had more time to solve more challenges, it was super fun.
This writeup contains all the challenges that I solved, Crypto, Misc, Osint, Rev and Web.</p>]]></description>
</item>
<item>
    <title>SpookyCTF 2024 - Full Writeup</title>
    <link>https://thesaucese.github.io/spookyctf-2024-full-writeup/</link>
    <pubDate>Wed, 30 Oct 2024 20:00:36 &#43;0600</pubDate>
    <author>theSaucese</author>
    <guid>https://thesaucese.github.io/spookyctf-2024-full-writeup/</guid>
    <description><![CDATA[<h2 id="intro">Intro</h2>
<p>This CTF was fun and I would recommend it for beginners ! On par with DeadFace.</p>
<p>This writeup contains all the challanges that I have solved (14 challenges).</p>
<p>The categories were : Forensics, Osint, Steganography, Misc and Web (Well, technically it&rsquo;s Reverse).</p>]]></description>
</item>
<item>
    <title>Cyber Odyssey 2024 - easy license</title>
    <link>https://thesaucese.github.io/easy-license/</link>
    <pubDate>Tue, 22 Oct 2024 11:31:05 &#43;0600</pubDate>
    <author>theSaucese</author>
    <guid>https://thesaucese.github.io/easy-license/</guid>
    <description><![CDATA[<p>Description : Crack a license for JVNE and submit it remotely to get your flag.</p>]]></description>
</item>
<item>
    <title>Cyber Odyssey 2024 - pyJail</title>
    <link>https://thesaucese.github.io/pyjail/</link>
    <pubDate>Tue, 22 Oct 2024 11:31:05 &#43;0600</pubDate>
    <author>theSaucese</author>
    <guid>https://thesaucese.github.io/pyjail/</guid>
    <description><![CDATA[<p>Description : here you go, some free points.</p>]]></description>
</item>
<item>
    <title>Cyber Odyssey 2024 - spermPWN</title>
    <link>https://thesaucese.github.io/spermpwn/</link>
    <pubDate>Tue, 22 Oct 2024 11:31:05 &#43;0600</pubDate>
    <author>theSaucese</author>
    <guid>https://thesaucese.github.io/spermpwn/</guid>
    <description><![CDATA[<p>Description : here you go, some free points.</p>]]></description>
</item>
<item>
    <title>Cyber Odyssey 2024 - Trenbolone Acetate</title>
    <link>https://thesaucese.github.io/trenbolone-acetate/</link>
    <pubDate>Tue, 22 Oct 2024 11:31:05 &#43;0600</pubDate>
    <author>theSaucese</author>
    <guid>https://thesaucese.github.io/trenbolone-acetate/</guid>
    <description><![CDATA[<p>Description : The secret sauce for an absolute jacked body. Don&rsquo;t do steroids it&rsquo;s a joke.</p>]]></description>
</item>
<item>
    <title>DEADFACE 2024 - Winning Factors</title>
    <link>https://thesaucese.github.io/winning-factors/</link>
    <pubDate>Tue, 22 Oct 2024 11:31:05 &#43;0600</pubDate>
    <author>theSaucese</author>
    <guid>https://thesaucese.github.io/winning-factors/</guid>
    <description><![CDATA[<p>Description : As another test of your programming prowess, Turbo Tactical wants to see if you can write a script to solve mathematic equations being served by a remote server within 3 seconds.</p>]]></description>
</item>
<item>
    <title>CSAW 2024 - Obfuscation</title>
    <link>https://thesaucese.github.io/obfuscation/</link>
    <pubDate>Fri, 11 Oct 2024 23:20:54 &#43;0600</pubDate>
    <author>theSaucese</author>
    <guid>https://thesaucese.github.io/obfuscation/</guid>
    <description><![CDATA[The goal of this challenge is to reverse this highly obfuscated binary and get the correct passphrase
Explanation The program asks for a passphrase, because of that and the name of the program I assumed there would some passphrase obfuscated, so I decompiled it :
Couldn&rsquo;t understand anything so I checked if maybe it was packed ?
Nope, okay we&rsquo;ll let&rsquo;s use BinaryNinja then :
93A3 is our function, so let&rsquo;s set a breakpoint at the start of it and see what happens to our input :]]></description>
</item>
<item>
    <title>BlackHatMEA 2024 - RD What Now?</title>
    <link>https://thesaucese.github.io/blackhatmea-2024-rd-what-now/</link>
    <pubDate>Mon, 02 Sep 2024 23:48:11 &#43;0600</pubDate>
    <author>theSaucese</author>
    <guid>https://thesaucese.github.io/blackhatmea-2024-rd-what-now/</guid>
    <description><![CDATA[I have some files missing but I think I can figure it out anyways.
Explanation Typical &ldquo;Z3 solver/whole lotta conditions&rdquo; challenge, but written in R.
We start with a file that contains a bunch of zlib files. We can use binwalk to extract these files.
The files contain a bunch of non sense and couple strings like 0.0.9000, quick google search and we find that it has something to do with R :]]></description>
</item>
</channel>
</rss>
